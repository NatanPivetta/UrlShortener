# Porta HTTP
quarkus.http.port=8086


kafka.broker.dev=://localhost:9092
kafka.broker=kafka:9093
mongo.string=mongodb://mongo:27017
mongo.string.dev=mongodb://localhost:27017
redis.host.dev=redis://localhost:6379
redis.host=redis://redis:6379

quarkus.mongodb.connection-string = ${mongo.string}
quarkus.mongodb.database = encurtador

# JWT config
mp.jwt.verify.issuer=auth-service
smallrye.jwt.sign.algorithm=RS256
smallrye.jwt.sign.key.location=META-INF/resources/privateKey.pem
mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem
quarkus.smallrye-jwt.enabled=true
mp.jwt.token.principal-claim=upn

# JWT test endpoint
quarkus.http.auth.permission.authenticated.paths=/auth/jwt-debug
quarkus.http.auth.permission.authenticated.policy=authenticated

# OpenAPI
quarkus.smallrye-openapi.security-scheme=jwt

# Kafka
kafka.bootstrap.servers=${kafka.broker}
mp.messaging.outgoing.short-url-events.topic=user-register
mp.messaging.outgoing.short-url-events.connector=smallrye-kafka
mp.messaging.outgoing.short-url-events.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# CORS
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Authorization,Content-Type,Accept,ngrok-skip-browser-warning
quarkus.http.cors.exposed-headers=Authorization
quarkus.http.cors.access-control-allow-credentials=true




# Desativa o Hibernate ORM
quarkus.hibernate-orm.enabled=false

# Desativa qualquer datasource JDBC
quarkus.datasource.jdbc=false
quarkus.datasource.db-kind=none
quarkus.datasource.devservices.enabled=false

# (opcional) Desativa transações JTA se não estiver usando
quarkus.transaction-manager.default-transaction-manager=none
